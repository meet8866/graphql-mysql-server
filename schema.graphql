type Query {
  organizations: [Organization!]!
  employees: [Employee!]!
  organization(username: String!): Organization!
  organizationByUuid(uuid: String!): Organization!
  employee(companyEmail: String!): Employee!
  employeeByUuid(uuid: ID!): Employee!
}

type Mutation {
  createOrganization(data: CreateOrganization): Organization!
  deleteOrganization(id: ID): Organization!
  createEmployee(data: CreateEmployee): Employee!
}

type Employee {
  employeeId: ID!
  uuid: ID!
  firstName: String!
  lastName: String!
  password: String
  companyEmail: String!
  companyEmployeeId: String
  personalEmail: String
  companyPhone: String
  personalPhone: String
  isDeleted: Int!
  notes: String
  organizationId: Int
  creationDate: String
  updateDate: String
}

type Organization {
  id: ID
  uuid: String
  name: String!
  username: String!
  password: String!
  creationDate: String
  updateDate: String
}

type DocuSign {
  id: ID
  uuid: String
  accountId: String!
  integrationKey: String!
  secretKey: String!
  accessToken: String!
  authorization: String!
  refreshToken: String!
  organization: Organization!
}

type Dropbox {
  id: ID
  uuid: String
  accountId: String!
  accessToken: String!
  organization: Organization!
}

input CreateOrganization {
  name: String!
  username: String!
  password: String!
}

input CreateEmployee {
  firstName: String!
  lastName: String!
  companyEmail: String!
  password: String
  companyEmployeeId: String
  personalEmail: String
  companyPhone: String
  personalPhone: String
  notes: String
  organizationId: Int
}
